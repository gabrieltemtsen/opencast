generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model casts {
  id                 String    @id @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  updated_at         DateTime  @default(now()) @db.Timestamptz(6)
  timestamp          DateTime  @db.Timestamptz(6)
  deleted_at         DateTime? @db.Timestamptz(6)
  pruned_at          DateTime? @db.Timestamptz(6)
  fid                BigInt
  parent_fid         BigInt?
  hash               Bytes     @unique
  root_parent_hash   Bytes?
  parent_hash        Bytes?
  root_parent_url    String?
  parent_url         String?
  text               String
  embeds             Json      @default("[]") @db.Json
  mentions           Json      @default("[]") @db.Json
  mentions_positions Json      @default("[]") @db.Json

  @@index([timestamp], map: "casts_timestamp_index")
}

model fids {
  fid              BigInt   @id
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)
  registered_at    DateTime @db.Timestamptz(6)
  custody_address  Bytes
  recovery_address Bytes
}

model kysely_migration {
  name      String @id @db.VarChar(255)
  timestamp String @db.VarChar(255)
}

model kysely_migration_lock {
  id        String @id @db.VarChar(255)
  is_locked Int    @default(0)
}

model links {
  id                String    @id @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  updated_at        DateTime  @default(now()) @db.Timestamptz(6)
  timestamp         DateTime  @db.Timestamptz(6)
  deleted_at        DateTime? @db.Timestamptz(6)
  pruned_at         DateTime? @db.Timestamptz(6)
  fid               BigInt
  target_fid        BigInt
  display_timestamp DateTime? @db.Timestamptz(6)
  type              String
  hash              Bytes     @unique
}

model reactions {
  id               String    @id @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)
  timestamp        DateTime  @db.Timestamptz(6)
  deleted_at       DateTime? @db.Timestamptz(6)
  pruned_at        DateTime? @db.Timestamptz(6)
  fid              BigInt
  target_cast_fid  BigInt?
  type             Int       @db.SmallInt
  hash             Bytes     @unique
  target_cast_hash Bytes?
  target_url       String?
}

model signers {
  id            String?   @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @db.Timestamptz(6)
  added_at      DateTime  @db.Timestamptz(6)
  removed_at    DateTime? @db.Timestamptz(6)
  fid           BigInt
  requester_fid BigInt
  key_type      Int       @db.SmallInt
  metadata_type Int       @db.SmallInt
  key           Bytes
  metadata      Json      @db.Json

  @@unique([fid, key], map: "signers_fid_key_unique")
  @@index([fid], map: "signers_fid_index")
  @@index([requester_fid], map: "signers_requester_fid_index")
}

model user_data {
  id         String    @id @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  timestamp  DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  fid        BigInt
  type       Int       @db.SmallInt
  hash       Bytes     @unique
  value      String

  @@unique([fid, type], map: "user_data_fid_type_unique")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model verifications {
  id             String    @id @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @db.Timestamptz(6)
  timestamp      DateTime  @db.Timestamptz(6)
  deleted_at     DateTime? @db.Timestamptz(6)
  fid            BigInt
  hash           Bytes
  signer_address Bytes
  block_hash     Bytes
  signature      Bytes

  @@unique([signer_address, fid], map: "verifications_signer_address_fid_unique")
  @@index([fid, timestamp], map: "verifications_fid_timestamp_index")
}

model hubs {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gossip_address  String
  rpc_address     String
  excluded_hashes String[]
  count           Int      @default(0)
  hub_version     String
  network         String
  app_version     String
  timestamp       BigInt
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @default(now()) @db.Timestamptz(6)
}

model storage {
  id         String?  @default(dbgenerated("generate_ulid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  rented_at  DateTime @db.Timestamptz(6)
  expires_at DateTime @db.Timestamptz(6)
  fid        BigInt
  units      Int      @db.SmallInt
  payer      Bytes

  @@unique([fid, expires_at], map: "storage_fid_expires_at_unique")
  @@index([fid, expires_at], map: "storage_fid_expires_at_index")
}
